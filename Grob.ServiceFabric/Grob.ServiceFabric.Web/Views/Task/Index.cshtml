@model Grob.ServiceFabric.Web.Models.Tasks.TaskViewModel

@{
    ViewData["Title"] = "Tasks";
}

<div>
    <div>
        @Html.ActionLink("Add task", "Create", "Task", routeValues: null, htmlAttributes: new { @class = "btn  btn-success" })
    </div>

    <div>
        <h2>Tasks</h2>
        <div class="containers-list">
            @foreach (Grob.Entities.Grob.GrobTask task in Model.Tasks)
            {
                <hr class="container-separator">
                <div class="container-row">
                    <div class="container-name-container">Created at: @Html.DisplayFor(m => task.CreationTime)</div>
                    <div class="container-created-container">Name: @Html.DisplayFor(m => task.Name)</div>
                    <div class="container-created-container">Application: @Html.DisplayFor(m => task.ApplicationName)</div>
                    @if (task.ContainerType == Grob.Entities.Grob.ContainerTypeEnum.Executable)
                    {
                        <div class="container-created-container">Last run: @Html.DisplayFor(m => task.LastRunTime)</div>
                        <div class="container-created-container">Next run: @Html.DisplayFor(m => task.NextRunTime)</div>
                    }
                    else
                    {
                        <div class="container-created-container">Status: @Html.DisplayFor(m => task.Status)</div>
                        <div class="container-created-container">Url: <a href="@task.Url">@task.Url</a></div>
                    }

                </div>

                @using (Html.BeginForm(actionName: "delete", controllerName: "task", routeValues: new { taskId = task.Id }))
                {
                    <input type="submit" class="btn btn-danger" value="Delete" />
                }
            }
        </div>
    </div>
</div>
